{"version":3,"file":"static/js/569.18652316.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/WeatherDetails/WeatherDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  padding: 20px;\n  position: relative;\n  z-index: 1;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  align-items: center;\n  width: 300px;\n\n  letter-spacing: 1.4px;\n  color: rgba(255, 255, 255, 0.621);\n  border-color: rgba(255, 255, 255, 0.679);\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.25);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n  @media screen and (max-width: 767px) {\n    max-width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  color: rgba(255, 255, 255, 0.621);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n\nexport const SearchIcon = styled(BsSearch)`\n  width: 30px;\n  height: 30px;\n`;\n","import { useState } from 'react';\nimport { Wrapper, Input, Button, SearchIcon } from './SearchBox.styled';\nimport { Notify } from 'notiflix';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [cityName, setCityName] = useState('');\n\n  const handleSubmit = event => {\n    if (cityName.trim() === '') {\n      Notify.failure(\n        'Sorry, there are no city name matching your search query. Please try again.'\n      );\n    }\n    event.preventDefault();\n    onSubmit(cityName);\n    onReset(event);\n  };\n\n  const onChangeInput = event => {\n    setCityName(event.target.value);\n  };\n\n  const onReset = event => {\n    setCityName('');\n    event.target.reset();\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search city...\"\n        value={cityName}\n        onChange={onChangeInput}\n      />\n      <Button type=\"submit\">\n        <SearchIcon />\n      </Button>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import { Suspense, lazy } from 'react';\nimport { useState } from 'react';\nimport { Tab, Tabs } from '@mui/material';\nimport { useSearchParams } from 'react-router-dom';\nimport Box from 'components/Box';\nimport Loader from 'components/Loader';\nimport SearchBox from 'components/SearchBox';\nconst HourlyWeather = lazy(() => import('../../components/HourlyWeather'));\nconst ThreeDaysWeather = lazy(() =>\n  import('../../components/ThreeDaysWeather')\n);\nconst RealTimeWeather = lazy(() => import('../../components/RealTimeWeather'));\n\nconst WeatherDetails = () => {\n  const [value, setValue] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n      </div>\n    );\n  }\n\n  return (\n    <Box>\n      <Box\n        as=\"header\"\n        sx={{\n          borderBottom: 1,\n          borderColor: 'divider',\n        }}\n        style={{\n          color: 'white',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingTop: '10px',\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Real time\"\n            {...a11yProps(0)}\n          />\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"24h weather\"\n            {...a11yProps(1)}\n          />\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Three days\"\n            {...a11yProps(2)}\n          />\n        </Tabs>\n      </Box>\n      <SearchBox onSubmit={handleInputSubmit} />\n      <Suspense fallback={<Loader />}>\n        <Box as=\"main\">\n          <TabPanel value={value} index={0}>\n            <RealTimeWeather query={query} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <HourlyWeather query={query} />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <ThreeDaysWeather query={query} />\n          </TabPanel>\n        </Box>\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default WeatherDetails;\n"],"names":["Wrapper","styled","Input","Button","SearchIcon","BsSearch","onSubmit","useState","cityName","setCityName","onReset","event","target","reset","trim","Notify","preventDefault","type","placeholder","value","onChange","HourlyWeather","lazy","ThreeDaysWeather","RealTimeWeather","setValue","useSearchParams","searchParams","setSearchParams","query","get","a11yProps","index","id","TabPanel","props","children","other","role","hidden","Box","sx","p","as","borderBottom","borderColor","style","color","display","justifyContent","paddingTop","Tabs","newValue","Tab","label","Suspense","fallback","Loader"],"sourceRoot":""}