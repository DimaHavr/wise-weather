{"version":3,"file":"static/js/411.e921698c.chunk.js","mappings":"2XASMA,GAAY,qCAAG,WAAMC,GAAN,iFACbC,EAAU,CACdC,OAAQ,MACRC,IAAK,sDACLC,OAAQ,CAAEC,EAAE,GAAD,OAAKL,GAAYM,KAAM,KAClCC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,kCAPJ,UAWIC,EAAAA,GAAAA,GAAMP,GAXV,cAWbQ,EAXa,yBAYZA,EAASC,MAZG,2CAAH,sDAeZC,GAAkB,qCAAG,WAAMX,GAAN,iFACnBC,EAAU,CACdC,OAAQ,MACRC,IAAK,sDACLC,OAAQ,CAAEC,EAAE,GAAD,OAAKL,GAAYM,KAAM,KAClCC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,kCAPE,UAWFC,EAAAA,GAAAA,GAAMP,GAXJ,cAWnBQ,EAXmB,yBAYlBA,EAASC,MAZS,2CAAH,sD,qBCtBXE,GAAUC,GAAAA,GAAAA,KAAH,0LAWPC,GAAQD,GAAAA,GAAAA,MAAH,wcAmBLE,GAASF,GAAAA,GAAAA,OAAH,ktB,qBCOnB,GAnCyB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SAC1B,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOjB,EAAP,KAAiBkB,EAAjB,KAiBMC,EAAU,SAAAC,GACdF,EAAY,IACZE,EAAMC,OAAOC,OACd,EAED,OACE,WAACV,GAAD,CAASI,SArBU,SAAAI,GACK,KAApBpB,EAASuB,QACXC,GAAAA,OAAAA,QACE,+EAGJJ,EAAMK,iBACNT,EAAShB,GACTmB,EAAQC,EACT,EAYC,WACE,UAACN,GAAD,CACEY,KAAK,OACLC,YAAY,iBACZC,MAAO5B,EACP6B,SAfgB,SAAAT,GACpBF,EAAYE,EAAMC,OAAOO,MAC1B,KAeG,UAACb,GAAD,CAAQW,KAAK,SAAb,sBAGL,E,uDC/BYI,GAAYjB,GAAAA,GAAAA,IAAH,yYAmBTkB,GAAmBlB,GAAAA,GAAAA,IAAH,0IAQhBmB,GAAmBnB,GAAAA,GAAAA,IAAH,iIAQhBoB,GAAQpB,GAAAA,GAAAA,GAAH,sHAOLqB,GAAerB,GAAAA,GAAAA,GAAH,gOAeZsB,IAAWtB,EAAAA,GAAAA,IAAOuB,GAAAA,IAAPvB,CAAH,0DAIRwB,IAAWxB,EAAAA,GAAAA,IAAOyB,GAAAA,IAAPzB,CAAH,0DAKR0B,IAAU1B,EAAAA,GAAAA,IAAO2B,GAAAA,IAAP3B,CAAH,0DAKP4B,IAAe5B,EAAAA,GAAAA,IAAO6B,GAAAA,IAAP7B,CAAH,0DAKZ8B,IAAgB9B,EAAAA,GAAAA,IAAO+B,GAAAA,IAAP/B,CAAH,0DAUbgC,KALehC,EAAAA,GAAAA,IAAOiC,GAAAA,IAAPjC,CAAH,2DAKMA,EAAAA,GAAAA,IAAOkC,GAAAA,IAAPlC,CAAH,2DAKfmC,IAAgBnC,EAAAA,GAAAA,IAAOoC,GAAAA,IAAPpC,CAAH,0DAKbqC,GAAWrC,GAAAA,GAAAA,EAAH,yHCUrB,GA3FwB,WAAO,IAAD,EAC5B,GAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOkC,EAAP,KAAiBC,EAAjB,KACA,GAAsCnC,EAAAA,EAAAA,UAAS,IAA/C,eAAOoC,EAAP,KAAoBC,EAApB,KACQC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UACd,GAAwCC,EAAAA,GAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM3D,EAAQ,UAAG0D,EAAaE,IAAI,gBAApB,QAAgC,GAG5CC,EAQER,EARFQ,UACAC,EAOET,EAPFS,SACAC,EAMEV,EANFU,OACAC,EAKEX,EALFW,YACAC,EAIEZ,EAJFY,UACAC,EAGEb,EAHFa,GACAC,EAEEd,EAFFc,SACAC,EACEf,EADFe,aAGFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,qCAAG,8GAEDvE,GAAaC,GAFZ,OAEdU,EAFc,OAGpB0C,EAAY1C,EAAKyC,UACjBG,EAAe5C,EAAK6D,SAJA,gDAMpBC,QAAQC,IAAR,MANoB,yDAAH,qDAShBzE,GAGLsE,GACD,GAAE,CAACtE,IAQJ,OACE,WAAC0E,GAAA,EAAD,CAAKC,GAAG,MAAR,WACE,UAAC,GAAD,CAAW3D,SARW,SAAAY,GACxB+B,EAA0B,KAAV/B,EAAe,CAAEgD,MAAOhD,GAAU,IAClD0B,EAAe,IACfF,EAAY,GACb,IAKIG,IACC,UAACmB,GAAA,EAAD,CAAKG,QAAQ,OAAOC,eAAe,SAASC,cAAc,OAA1D,UACE,WAACjD,GAAD,YACE,WAACC,GAAD,YACE,UAACE,GAAD,UAAQsB,KACR,WAACL,GAAD,YACE,UAACf,GAAD,IADF,IACgBqB,MAEhB,WAACkB,GAAA,EAAD,CAAKG,QAAQ,OAAb,WACE,iBAAKG,IAAKnB,EAAUoB,KAAMC,IAAI,MAC9B,WAAChC,GAAD,WACGa,EADH,KACW,UAAClB,GAAD,WAGb,UAACK,GAAD,UAAWW,EAAUsB,WAEvB,UAACjD,GAAD,uBACA,WAACF,GAAD,YACE,WAACkB,GAAD,YACE,UAACb,GAAD,IADF,IACgByB,EADhB,UAGA,WAACZ,GAAD,YACE,UAACF,GAAD,IACCgB,EAFH,UAIA,WAACd,GAAD,YACE,UAACP,GAAD,IACCsB,EAFH,SAIA,WAACf,GAAD,YACE,UAACT,GAAD,IACC0B,EAFH,QAIA,WAACjB,GAAD,wBACakB,EADb,KAC0B,UAACvB,GAAD,QAE1B,WAACK,GAAD,YACE,UAACX,GAAD,IACC2B,EAFH,sBAUb,E,oBCxGYpC,GAAYjB,GAAAA,GAAAA,IAAH,yYAmBTkB,GAAmBlB,GAAAA,GAAAA,IAAH,0IAQhBmB,GAAmBnB,GAAAA,GAAAA,IAAH,iIAQhBoB,GAAQpB,GAAAA,GAAAA,GAAH,sHAsBLsB,IAfetB,GAAAA,GAAAA,GAAH,iOAeDA,EAAAA,GAAAA,IAAOuB,GAAAA,IAAPvB,CAAH,2DAIRwB,IAAWxB,EAAAA,GAAAA,IAAOyB,GAAAA,IAAPzB,CAAH,0DAUR4B,KALU5B,EAAAA,GAAAA,IAAO2B,GAAAA,IAAP3B,CAAH,2DAKQA,EAAAA,GAAAA,IAAO6B,GAAAA,IAAP7B,CAAH,2DAKZ8B,IAAgB9B,EAAAA,GAAAA,IAAO+B,GAAAA,IAAP/B,CAAH,0DAUbgC,KALehC,EAAAA,GAAAA,IAAOiC,GAAAA,IAAPjC,CAAH,2DAKMA,EAAAA,GAAAA,IAAOkC,GAAAA,IAAPlC,CAAH,2DAUfqC,KALgBrC,EAAAA,GAAAA,IAAOoC,GAAAA,IAAPpC,CAAH,0DAKFA,GAAAA,GAAAA,EAAH,0HCoBrB,GArGyB,WAAO,IAAD,EAC7B,GAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOkC,EAAP,KAAiBC,EAAjB,KACA,GAAsCnC,EAAAA,EAAAA,UAAS,IAA/C,eAAOoC,EAAP,KAAoBC,EAApB,KACA,GAAwCG,EAAAA,GAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM3D,EAAQ,UAAG0D,EAAaE,IAAI,gBAApB,QAAgC,GACtCL,EAASJ,EAATI,MAERc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,qCAAG,8GAEDvE,GAAaC,GAFZ,OAEdU,EAFc,OAGpB0C,EAAY1C,EAAKyC,UACjBG,EAAe5C,EAAK0E,SAASC,aAJT,gDAMpBb,QAAQC,IAAR,MANoB,yDAAH,qDAShBzE,GAGLsE,GACD,GAAE,CAACtE,IAEJ,IAMMsF,EAAejC,EAAYkC,KAAI,WAAgBC,GAAW,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,KAEzC7B,EAME4B,EANF5B,UACA8B,EAKEF,EALFE,UACAC,EAIEH,EAJFG,UACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,YACAC,EACEN,EADFM,eAEF,OACE,UAACrB,GAAA,EAAD,CAEEG,QAAQ,OACRC,eAAe,SACfkB,aAAa,OAJf,UAME,WAAC,GAAD,YACE,WAAC,GAAD,YACE,UAAC,GAAD,UAAQzC,KACR,WAAC,GAAD,YACE,UAAC,GAAD,IADF,IACgBmC,MAEhB,WAAChB,GAAA,EAAD,YACE,iBAAKM,IAAKnB,EAAUoB,KAAMC,IAAI,MAC9B,UAAC,GAAD,UAAWrB,EAAUsB,cAGzB,WAACT,GAAA,EAAD,CAAKC,GAAG,MAAME,QAAQ,OAAOoB,MAAO,CAAEC,IAAK,QAA3C,WACE,WAAC,GAAD,mBACQP,GACN,UAAC,GAAD,QAEF,WAAC,GAAD,mBACQC,GACN,UAAC,GAAD,WAGJ,WAAC,GAAD,YACE,WAAC,GAAD,YACE,UAAC,GAAD,IADF,SACqBC,EADrB,UAGA,WAAC,GAAD,YACE,UAAC,GAAD,IACCE,EAFH,SAIA,WAAC,GAAD,YACE,UAAC,GAAD,IACCD,EAFH,cAlCCN,EA0CV,IACD,OACE,WAACd,GAAA,EAAD,CAAKC,GAAG,MAAR,WACE,UAAC,GAAD,CAAW3D,SA9DW,SAAAY,GACxB+B,EAA0B,KAAV/B,EAAe,CAAEgD,MAAOhD,GAAU,IAClD0B,EAAe,IACfF,EAAY,GACb,IA2DIG,IACC,UAAC,MAAD,CACE4C,YAAY,EACZC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,YAAY,EALd,SAOGjB,MAKV,EClHYxD,GAAYjB,GAAAA,GAAAA,IAAH,yYAmBTkB,GAAmBlB,GAAAA,GAAAA,IAAH,4JAQhBmB,GAAmBnB,GAAAA,GAAAA,IAAH,sJAShBoB,GAAQpB,GAAAA,GAAAA,GAAH,sHAsBLsB,IAfetB,GAAAA,GAAAA,GAAH,iOAeDA,EAAAA,GAAAA,IAAOuB,GAAAA,IAAPvB,CAAH,2DAIRwB,IAAWxB,EAAAA,GAAAA,IAAOyB,GAAAA,IAAPzB,CAAH,0DAKR0B,IAAU1B,EAAAA,GAAAA,IAAO2B,GAAAA,IAAP3B,CAAH,0DAKP4B,IAAe5B,EAAAA,GAAAA,IAAO6B,GAAAA,IAAP7B,CAAH,0DAKZ8B,IAAgB9B,EAAAA,GAAAA,IAAO+B,GAAAA,IAAP/B,CAAH,0DAUbgC,KALehC,EAAAA,GAAAA,IAAOiC,GAAAA,IAAPjC,CAAH,2DAKMA,EAAAA,GAAAA,IAAOkC,GAAAA,IAAPlC,CAAH,2DAKfmC,IAAgBnC,EAAAA,GAAAA,IAAOoC,GAAAA,IAAPpC,CAAH,0DAKbqC,GAAWrC,GAAAA,GAAAA,EAAH,yHCqCrB,GArHsB,WAAO,IAAD,EAC1B,GAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOkC,EAAP,KAAiBC,EAAjB,KACA,GAAsCnC,EAAAA,EAAAA,UAAS,IAA/C,eAAOoC,EAAP,KAAoBC,EAApB,KACA,GAAwCG,EAAAA,GAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM3D,EAAQ,UAAG0D,EAAaE,IAAI,gBAApB,QAAgC,GACtCL,EAASJ,EAATI,MAERc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,qCAAG,8GAED3D,GAAmBX,GAFlB,OAEdU,EAFc,OAGpB0C,EAAY1C,EAAKyC,UACjBG,EAAe5C,EAAK0E,SAASC,aAJT,gDAMpBb,QAAQC,IAAR,MANoB,yDAAH,qDAShBzE,GAGLsE,GACD,GAAE,CAACtE,IAEJ,IAKMsF,EAAejC,EAAYkC,KAAI,WAAiBC,GAAW,IAAzBgB,EAAwB,EAAxBA,KAAwB,EAAlBd,KAC5C,OAAOc,EAAKjB,KACV,YAUO,IATLkB,EASI,EATJA,KACA5C,EAQI,EARJA,UACAE,EAOI,EAPJA,OACAD,EAMI,EANJA,SACAG,EAKI,EALJA,UACAE,EAII,EAJJA,SACAH,EAGI,EAHJA,YACAE,EAEI,EAFJA,GACAE,EACI,EADJA,YAGA,OADAI,QAAQC,IAAIgC,EAAKC,MAAM,GAAI,MAEzB,UAAChC,GAAA,EAAD,CAEEG,QAAQ,OACRC,eAAe,SACfkB,aAAa,OAJf,UAME,UAAC,GAAD,WACE,WAAC,GAAD,YACE,UAAC,GAAD,UAAQzC,KAER,WAAC,GAAD,YACE,WAAC,GAAD,YACE,UAAC,GAAD,IADF,IACgBkD,MAEhB,WAAC/B,GAAA,EAAD,CAAKG,QAAQ,OAAb,WACE,iBAAKG,IAAKnB,EAAUoB,KAAMC,IAAI,MAC9B,WAAC,GAAD,WACGnB,GACD,UAAC,GAAD,cAKN,WAAC,GAAD,YACE,WAAC,GAAD,YACE,UAAC,GAAD,IADF,IACgBD,EADhB,UAGA,WAAC,GAAD,YACE,UAAC,GAAD,IACCE,EAFH,UAIA,WAAC,GAAD,YACE,UAAC,GAAD,IACCC,EAFH,SAIA,WAAC,GAAD,YACE,UAAC,GAAD,IACCE,EAFH,QAIA,WAAC,GAAD,wBACaC,EADb,KAC0B,UAAC,GAAD,QAE1B,WAAC,GAAD,YACE,UAAC,GAAD,IACCF,EAFH,qBAzCDsB,EAkDV,GAEJ,IAED,OACE,WAACd,GAAA,EAAD,CAAKC,GAAG,MAAR,WACE,UAAC,GAAD,CAAW3D,SA7EW,SAAAY,GACxB+B,EAA0B,KAAV/B,EAAe,CAAEgD,MAAOhD,GAAU,IAClD0B,EAAe,IACfF,EAAY,GACb,IA0EIG,IACC,UAAC,MAAD,CACE4C,YAAY,EACZC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZK,gBAAgB,EAChBJ,YAAY,EANd,SAQGjB,MAKV,E,gCC3CD,GAxFuB,WACrB,OAA0BrE,EAAAA,EAAAA,UAAS,GAAnC,eAAOW,EAAP,KAAcgF,EAAd,KAKA,SAASC,EAAUrB,GACjB,MAAO,CACLsB,GAAG,cAAD,OAAgBtB,GAClB,gBAAgB,mBAAhB,OAAoCA,GAEvC,CAED,SAASuB,EAASC,GAChB,IAAQC,EAAqCD,EAArCC,SAAUrF,EAA2BoF,EAA3BpF,MAAO4D,EAAoBwB,EAApBxB,MAAU0B,GAAnC,OAA6CF,EAA7C,IAEA,OACE,iCACEG,KAAK,WACLC,OAAQxF,IAAU4D,EAClBsB,GAAE,0BAAqBtB,GACvB,uCAA+BA,IAC3B0B,GALN,aAOGtF,IAAU4D,IACT,UAACd,GAAA,EAAD,CAAK2C,GAAI,CAAEC,EAAG,GAAd,UACE,gCAAGL,QAKZ,CAED,OACE,WAACvC,GAAA,EAAD,CAAKC,GAAG,OAAR,WACE,UAACD,GAAA,EAAD,CACE2C,GAAI,CACFE,aAAc,EACdC,YAAa,WAEfvB,MAAO,CACLwB,MAAO,QACP5C,QAAS,OACTC,eAAgB,SAChB4C,WAAY,QAThB,UAYE,WAACC,EAAA,EAAD,CACE/F,MAAOA,EACPC,SA/Ca,SAACT,EAAOwG,GAC3BhB,EAASgB,EACV,EA8CO,aAAW,qBAHb,WAKE,UAACC,EAAA,GAAD,QACE5B,MAAO,CACLwB,MAAO,SAETK,MAAM,aACFjB,EAAU,MAEhB,UAACgB,EAAA,GAAD,QACE5B,MAAO,CACLwB,MAAO,SAETK,MAAM,eACFjB,EAAU,MAEhB,UAACgB,EAAA,GAAD,QACE5B,MAAO,CACLwB,MAAO,SAETK,MAAM,cACFjB,EAAU,WAIpB,UAACE,EAAD,CAAUnF,MAAOA,EAAO4D,MAAO,EAA/B,UACE,UAAC,GAAD,OAEF,UAACuB,EAAD,CAAUnF,MAAOA,EAAO4D,MAAO,EAA/B,UACE,UAAC,GAAD,OAEF,UAACuB,EAAD,CAAUnF,MAAOA,EAAO4D,MAAO,EAA/B,UACE,UAAC,GAAD,QAIP,C","sources":["services/WeatherAPI.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/RealTimeWeather/RealTimeWeather.styled.js","components/RealTimeWeather/RealTimeWeather.jsx","components/ThreeDaysWeather/ThreeDaysWeather.styled.js","components/ThreeDaysWeather/ThreeDaysWeather.jsx","components/HourlyWeather/HourlyWeather.styled.js","components/HourlyWeather/HourlyWeather.jsx","components/WeatherDetails/WeatherDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// async function fetchMovies() {\n//   const url = `https://api.themoviedb.org/3/trending/all/day?api_key=b1c3a2089fd706f08956c6d7f55cc574`;\n\n//   const response = await axios.get(url);\n//   return response.data;\n// }\n\nconst fetchWeather = async cityName => {\n  const options = {\n    method: 'GET',\n    url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n    params: { q: `${cityName}`, days: '3' },\n    headers: {\n      'X-RapidAPI-Key': 'a05c4ca72amshd6999f2c5f785e3p10aaa3jsnfe5969edd877',\n      'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com',\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nconst fetchOneDayWeather = async cityName => {\n  const options = {\n    method: 'GET',\n    url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n    params: { q: `${cityName}`, days: '1' },\n    headers: {\n      'X-RapidAPI-Key': 'a05c4ca72amshd6999f2c5f785e3p10aaa3jsnfe5969edd877',\n      'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com',\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport { fetchWeather, fetchOneDayWeather };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  margin: 0 auto 20px auto;\n  padding: 20px;\n  position: relative;\n  z-index: 1;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  align-items: center;\n  width: 300px;\n\n  letter-spacing: 1.4px;\n  color: rgba(255, 255, 255, 0.621);\n  border-color: rgba(255, 255, 255, 0.679);\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.25);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n  @media screen and (max-width: 767px) {\n    max-width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 80px;\n\n  padding: 10px;\n  letter-spacing: 1.1px;\n  text-transform: uppercase;\n  color: rgba(255, 255, 255, 0.621);\n  border-color: rgba(255, 255, 255, 0.679);\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.25);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n","import { useState } from 'react';\nimport { Wrapper, Input, Button } from './SearchBox.styled';\nimport { Notify } from 'notiflix';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [cityName, setCityName] = useState('');\n\n  const handleSubmit = event => {\n    if (cityName.trim() === '') {\n      Notify.failure(\n        'Sorry, there are no city name matching your search query. Please try again.'\n      );\n    }\n    event.preventDefault();\n    onSubmit(cityName);\n    onReset(event);\n  };\n\n  const onChangeInput = event => {\n    setCityName(event.target.value);\n  };\n\n  const onReset = event => {\n    setCityName('');\n    event.target.reset();\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search city...\"\n        value={cityName}\n        onChange={onChangeInput}\n      />\n      <Button type=\"submit\">Submit</Button>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import styled from 'styled-components';\nimport { IoMdTime } from 'react-icons/io';\nimport { GiWindsock, GiWindSlap } from 'react-icons/gi';\nimport { WiBarometer, WiRaindrops, WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { BsFillSunFill } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 448px;\n  height: 460px;\n  background: linear-gradient(\n    198deg,\n    rgb(255 255 255 / 8%) 0%,\n    rgb(255 255 255 / 12%) 100%\n  );\n  backdrop-filter: blur(25px);\n  border-radius: 30px;\n  @media (max-width: 391px) {\n    border-radius: 0;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 40px;\n  line-height: 50px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  left: 40px;\n  position: absolute;\n  top: 60%;\n  width: 100%;\n\n  &::before {\n    content: '';\n    border-top: 1px solid #fff;\n    width: 82%;\n    position: absolute;\n    top: -10px;\n  }\n`;\n\nexport const TimeIcon = styled(IoMdTime)`\n  width: 30px;\n  height: 30px;\n`;\nexport const WindIcon = styled(GiWindsock)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const SunIcon = styled(BsFillSunFill)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const HumidityIcon = styled(WiHumidity)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const RaindropsIcon = styled(WiRaindrops)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const WindSlapIcon = styled(GiWindSlap)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TempCelsiusIcon = styled(TbTemperatureCelsius)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const BarometerIcon = styled(WiBarometer)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchWeather } from 'services/WeatherAPI';\nimport Box from 'components/Box';\nimport SearchBox from 'components/SearchBox';\nimport {\n  TimeIcon,\n  TextItem,\n  WindIcon,\n  TempCelsiusIcon,\n  BarometerIcon,\n  RaindropsIcon,\n  HumidityIcon,\n  SunIcon,\n  Container,\n  ContentContainer,\n  DetailsContainer,\n  DetailsTitle,\n  Title,\n} from './RealTimeWeather.styled';\n\nconst RealTimeWeather = () => {\n  const [location, setLocation] = useState([]);\n  const [currentCity, setCurrentCity] = useState([]);\n  const { name, localtime } = location;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cityName = searchParams.get('query') ?? '';\n\n  const {\n    condition,\n    wind_kph,\n    temp_c,\n    pressure_mb,\n    precip_mm,\n    uv,\n    humidity,\n    feelslike_c,\n  } = currentCity;\n\n  useEffect(() => {\n    const getFetchWeather = async () => {\n      try {\n        const data = await fetchWeather(cityName);\n        setLocation(data.location);\n        setCurrentCity(data.current);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!cityName) {\n      return;\n    }\n    getFetchWeather();\n  }, [cityName]);\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setCurrentCity([]);\n    setLocation([]);\n  };\n\n  return (\n    <Box as=\"div\">\n      <SearchBox onSubmit={handleInputSubmit} />\n      {name && (\n        <Box display=\"flex\" justifyContent=\"center\" paddingBottom=\"30px\">\n          <Container>\n            <ContentContainer>\n              <Title>{name}</Title>\n              <TextItem>\n                <TimeIcon /> {localtime}\n              </TextItem>\n              <Box display=\"flex\">\n                <img src={condition.icon} alt=\"\" />\n                <TextItem>\n                  {temp_c} <TempCelsiusIcon />\n                </TextItem>\n              </Box>\n              <TextItem>{condition.text}</TextItem>\n            </ContentContainer>\n            <DetailsTitle>Details</DetailsTitle>\n            <DetailsContainer>\n              <TextItem>\n                <WindIcon /> {wind_kph}k/h\n              </TextItem>\n              <TextItem>\n                <BarometerIcon />\n                {pressure_mb}hPa\n              </TextItem>\n              <TextItem>\n                <RaindropsIcon />\n                {precip_mm}mm\n              </TextItem>\n              <TextItem>\n                <HumidityIcon />\n                {humidity}%\n              </TextItem>\n              <TextItem>\n                RealFeel: {feelslike_c} <TempCelsiusIcon />\n              </TextItem>\n              <TextItem>\n                <SunIcon />\n                {uv} of 10\n              </TextItem>\n            </DetailsContainer>\n          </Container>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default RealTimeWeather;\n","import styled from 'styled-components';\nimport { IoMdTime } from 'react-icons/io';\nimport { GiWindsock, GiWindSlap } from 'react-icons/gi';\nimport { WiBarometer, WiRaindrops, WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { BsFillSunFill } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 448px;\n  height: 460px;\n  background: linear-gradient(\n    198deg,\n    rgb(255 255 255 / 8%) 0%,\n    rgb(255 255 255 / 12%) 100%\n  );\n  backdrop-filter: blur(25px);\n  border-radius: 30px;\n  @media (max-width: 391px) {\n    border-radius: 0;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 40px;\n  line-height: 50px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  left: 40px;\n  position: absolute;\n  top: 60%;\n  width: 100%;\n\n  &::before {\n    content: '';\n    border-top: 1px solid #fff;\n    width: 82%;\n    position: absolute;\n    top: -10px;\n  }\n`;\n\nexport const TimeIcon = styled(IoMdTime)`\n  width: 30px;\n  height: 30px;\n`;\nexport const WindIcon = styled(GiWindsock)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const SunIcon = styled(BsFillSunFill)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const HumidityIcon = styled(WiHumidity)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const RaindropsIcon = styled(WiRaindrops)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const WindSlapIcon = styled(GiWindSlap)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TempCelsiusIcon = styled(TbTemperatureCelsius)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const BarometerIcon = styled(WiBarometer)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchWeather } from 'services/WeatherAPI';\nimport Box from 'components/Box';\nimport SearchBox from 'components/SearchBox';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\n\nimport {\n  TimeIcon,\n  TextItem,\n  WindIcon,\n  TempCelsiusIcon,\n  RaindropsIcon,\n  HumidityIcon,\n  Container,\n  ContentContainer,\n  DetailsContainer,\n  Title,\n} from './ThreeDaysWeather.styled';\n\nconst ThreeDaysWeather = () => {\n  const [location, setLocation] = useState([]);\n  const [currentCity, setCurrentCity] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cityName = searchParams.get('query') ?? '';\n  const { name } = location;\n\n  useEffect(() => {\n    const getFetchWeather = async () => {\n      try {\n        const data = await fetchWeather(cityName);\n        setLocation(data.location);\n        setCurrentCity(data.forecast.forecastday);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!cityName) {\n      return;\n    }\n    getFetchWeather();\n  }, [cityName]);\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setCurrentCity([]);\n    setLocation([]);\n  };\n\n  const renderSlides = currentCity.map(({ day, date }, index) => {\n    const {\n      condition,\n      mintemp_c,\n      maxtemp_c,\n      maxwind_kph,\n      avghumidity,\n      totalprecip_mm,\n    } = day;\n    return (\n      <Box\n        key={index}\n        display=\"flex\"\n        justifyContent=\"center\"\n        marginBottom=\"40px\"\n      >\n        <Container>\n          <ContentContainer>\n            <Title>{name}</Title>\n            <TextItem>\n              <TimeIcon /> {date}\n            </TextItem>\n            <Box>\n              <img src={condition.icon} alt=\"\" />\n              <TextItem>{condition.text}</TextItem>\n            </Box>\n          </ContentContainer>\n          <Box as=\"div\" display=\"flex\" style={{ gap: '15px' }}>\n            <TextItem>\n              Min: {mintemp_c}\n              <TempCelsiusIcon />\n            </TextItem>\n            <TextItem>\n              Max: {maxtemp_c}\n              <TempCelsiusIcon />\n            </TextItem>\n          </Box>\n          <DetailsContainer>\n            <TextItem>\n              <WindIcon /> max: {maxwind_kph}k/h\n            </TextItem>\n            <TextItem>\n              <RaindropsIcon />\n              {totalprecip_mm}mm\n            </TextItem>\n            <TextItem>\n              <HumidityIcon />\n              {avghumidity}%\n            </TextItem>\n          </DetailsContainer>\n        </Container>\n      </Box>\n    );\n  });\n  return (\n    <Box as=\"div\">\n      <SearchBox onSubmit={handleInputSubmit} />\n      {name && (\n        <Carousel\n          showThumbs={false}\n          emulateTouch={true}\n          swipeable={true}\n          showStatus={false}\n          showArrows={false}\n        >\n          {renderSlides}\n        </Carousel>\n      )}\n    </Box>\n  );\n};\n\nexport default ThreeDaysWeather;\n","import styled from 'styled-components';\nimport { IoMdTime } from 'react-icons/io';\nimport { GiWindsock, GiWindSlap } from 'react-icons/gi';\nimport { WiBarometer, WiRaindrops, WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { BsFillSunFill } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 448px;\n  height: 460px;\n  background: linear-gradient(\n    198deg,\n    rgb(255 255 255 / 8%) 0%,\n    rgb(255 255 255 / 12%) 100%\n  );\n  backdrop-filter: blur(25px);\n  border-radius: 30px;\n  @media (max-width: 391px) {\n    border-radius: 0;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  cursor: pointer;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  overflow: hidden;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 40px;\n  line-height: 50px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  left: 40px;\n  position: absolute;\n  top: 60%;\n  width: 100%;\n\n  &::before {\n    content: '';\n    border-top: 1px solid #fff;\n    width: 82%;\n    position: absolute;\n    top: -10px;\n  }\n`;\n\nexport const TimeIcon = styled(IoMdTime)`\n  width: 30px;\n  height: 30px;\n`;\nexport const WindIcon = styled(GiWindsock)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const SunIcon = styled(BsFillSunFill)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const HumidityIcon = styled(WiHumidity)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const RaindropsIcon = styled(WiRaindrops)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const WindSlapIcon = styled(GiWindSlap)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TempCelsiusIcon = styled(TbTemperatureCelsius)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const BarometerIcon = styled(WiBarometer)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchOneDayWeather } from 'services/WeatherAPI';\nimport Box from 'components/Box';\nimport SearchBox from 'components/SearchBox';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\n\nimport {\n  TimeIcon,\n  TextItem,\n  WindIcon,\n  TempCelsiusIcon,\n  BarometerIcon,\n  RaindropsIcon,\n  HumidityIcon,\n  SunIcon,\n  Container,\n  ContentContainer,\n  DetailsContainer,\n  Title,\n} from './HourlyWeather.styled';\n\nconst HourlyWeather = () => {\n  const [location, setLocation] = useState([]);\n  const [currentCity, setCurrentCity] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cityName = searchParams.get('query') ?? '';\n  const { name } = location;\n\n  useEffect(() => {\n    const getFetchWeather = async () => {\n      try {\n        const data = await fetchOneDayWeather(cityName);\n        setLocation(data.location);\n        setCurrentCity(data.forecast.forecastday);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!cityName) {\n      return;\n    }\n    getFetchWeather();\n  }, [cityName]);\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setCurrentCity([]);\n    setLocation([]);\n  };\n  const renderSlides = currentCity.map(({ hour, date }, index) => {\n    return hour.map(\n      ({\n        time,\n        condition,\n        temp_c,\n        wind_kph,\n        precip_mm,\n        humidity,\n        pressure_mb,\n        uv,\n        feelslike_c,\n      }) => {\n        console.log(time.slice(11, 16));\n        return (\n          <Box\n            key={index}\n            display=\"flex\"\n            justifyContent=\"center\"\n            marginBottom=\"40px\"\n          >\n            <Container>\n              <ContentContainer>\n                <Title>{name}</Title>\n\n                <ContentContainer>\n                  <TextItem>\n                    <TimeIcon /> {time}\n                  </TextItem>\n                  <Box display=\"flex\">\n                    <img src={condition.icon} alt=\"\" />\n                    <TextItem>\n                      {temp_c}\n                      <TempCelsiusIcon />\n                    </TextItem>\n                  </Box>\n                  {/* <TextItem>{condition.text}</TextItem> */}\n                </ContentContainer>\n                <DetailsContainer>\n                  <TextItem>\n                    <WindIcon /> {wind_kph}k/h\n                  </TextItem>\n                  <TextItem>\n                    <BarometerIcon />\n                    {pressure_mb}hPa\n                  </TextItem>\n                  <TextItem>\n                    <RaindropsIcon />\n                    {precip_mm}mm\n                  </TextItem>\n                  <TextItem>\n                    <HumidityIcon />\n                    {humidity}%\n                  </TextItem>\n                  <TextItem>\n                    RealFeel: {feelslike_c} <TempCelsiusIcon />\n                  </TextItem>\n                  <TextItem>\n                    <SunIcon />\n                    {uv} of 10\n                  </TextItem>\n                </DetailsContainer>\n              </ContentContainer>\n            </Container>\n          </Box>\n        );\n      }\n    );\n  });\n\n  return (\n    <Box as=\"div\">\n      <SearchBox onSubmit={handleInputSubmit} />\n      {name && (\n        <Carousel\n          showThumbs={false}\n          emulateTouch={true}\n          swipeable={true}\n          showStatus={false}\n          showIndicators={false}\n          showArrows={false}\n        >\n          {renderSlides}\n        </Carousel>\n      )}\n    </Box>\n  );\n};\n\nexport default HourlyWeather;\n","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Tab, Tabs } from '@mui/material';\nimport Box from 'components/Box';\nimport RealTimeWeather from 'components/RealTimeWeather';\nimport ThreeDaysWeather from 'components/ThreeDaysWeather';\nimport HourlyWeather from 'components/HourlyWeather';\n\nconst WeatherDetails = () => {\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <>{children}</>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Box as=\"main\">\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: 'divider',\n        }}\n        style={{\n          color: 'white',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingTop: '10px',\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Real time\"\n            {...a11yProps(0)}\n          />\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"24h weather\"\n            {...a11yProps(1)}\n          />\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Three days\"\n            {...a11yProps(2)}\n          />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <RealTimeWeather />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <HourlyWeather />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ThreeDaysWeather />\n      </TabPanel>\n    </Box>\n  );\n};\n\nexport default WeatherDetails;\n"],"names":["fetchWeather","cityName","options","method","url","params","q","days","headers","axios","response","data","fetchOneDayWeather","Wrapper","styled","Input","Button","onSubmit","useState","setCityName","onReset","event","target","reset","trim","Notify","preventDefault","type","placeholder","value","onChange","Container","ContentContainer","DetailsContainer","Title","DetailsTitle","TimeIcon","IoMdTime","WindIcon","GiWindsock","SunIcon","BsFillSunFill","HumidityIcon","WiHumidity","RaindropsIcon","WiRaindrops","TempCelsiusIcon","GiWindSlap","TbTemperatureCelsius","BarometerIcon","WiBarometer","TextItem","location","setLocation","currentCity","setCurrentCity","name","localtime","useSearchParams","searchParams","setSearchParams","get","condition","wind_kph","temp_c","pressure_mb","precip_mm","uv","humidity","feelslike_c","useEffect","getFetchWeather","current","console","log","Box","as","query","display","justifyContent","paddingBottom","src","icon","alt","text","forecast","forecastday","renderSlides","map","index","day","date","mintemp_c","maxtemp_c","maxwind_kph","avghumidity","totalprecip_mm","marginBottom","style","gap","showThumbs","emulateTouch","swipeable","showStatus","showArrows","hour","time","slice","showIndicators","setValue","a11yProps","id","TabPanel","props","children","other","role","hidden","sx","p","borderBottom","borderColor","color","paddingTop","Tabs","newValue","Tab","label"],"sourceRoot":""}