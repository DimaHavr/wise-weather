{"version":3,"file":"static/js/372.0c3e4788.chunk.js","mappings":"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","sources":["services/WeatherAPI.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/RealTimeWeather/RealTimeWeather.styled.js","components/RealTimeWeather/RealTimeWeather.jsx","components/ThreeDaysWeather/ThreeDaysWeather.styled.js","components/ThreeDaysWeather/ThreeDaysWeather.jsx","components/WeatherDetails/WeatherDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// async function fetchMovies() {\n//   const url = `https://api.themoviedb.org/3/trending/all/day?api_key=b1c3a2089fd706f08956c6d7f55cc574`;\n\n//   const response = await axios.get(url);\n//   return response.data;\n// }\n\nconst fetchWeather = async cityName => {\n  const options = {\n    method: 'GET',\n    url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n    params: { q: `${cityName}`, days: '3' },\n    headers: {\n      'X-RapidAPI-Key': 'a05c4ca72amshd6999f2c5f785e3p10aaa3jsnfe5969edd877',\n      'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com',\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\nexport { fetchWeather };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  margin: 0 auto 20px auto;\n  padding: 20px;\n  position: relative;\n  z-index: 1;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  align-items: center;\n  width: 300px;\n\n  letter-spacing: 1.4px;\n  color: rgba(255, 255, 255, 0.621);\n  border-color: rgba(255, 255, 255, 0.679);\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.25);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n  @media screen and (max-width: 767px) {\n    max-width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 80px;\n\n  padding: 10px;\n  letter-spacing: 1.1px;\n  text-transform: uppercase;\n  color: rgba(255, 255, 255, 0.621);\n  border-color: rgba(255, 255, 255, 0.679);\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.25);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n","import { useState } from 'react';\nimport { Wrapper, Input, Button } from './SearchBox.styled';\nimport { Notify } from 'notiflix';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [cityName, setCityName] = useState('');\n\n  const handleSubmit = event => {\n    if (cityName.trim() === '') {\n      Notify.failure(\n        'Sorry, there are no city name matching your search query. Please try again.'\n      );\n    }\n    event.preventDefault();\n    onSubmit(cityName);\n    onReset(event);\n  };\n\n  const onChangeInput = event => {\n    setCityName(event.target.value);\n  };\n\n  const onReset = event => {\n    setCityName('');\n    event.target.reset();\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search city...\"\n        value={cityName}\n        onChange={onChangeInput}\n      />\n      <Button type=\"submit\">Submit</Button>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import styled from 'styled-components';\nimport { IoMdTime } from 'react-icons/io';\nimport { GiWindsock, GiWindSlap } from 'react-icons/gi';\nimport { WiBarometer, WiRaindrops, WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { BsFillSunFill } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 448px;\n  height: 460px;\n  background: linear-gradient(\n    143.98deg,\n    rgba(255, 255, 255, 0.11) 0%,\n    rgba(255, 255, 255, 0.22) 100%\n  );\n  backdrop-filter: blur(25px);\n  border-radius: 30px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 40px;\n  line-height: 50px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  left: 40px;\n  position: absolute;\n  top: 60%;\n  width: 100%;\n\n  &::before {\n    content: '';\n    border-top: 1px solid #fff;\n    width: 82%;\n    position: absolute;\n    top: -10px;\n  }\n`;\n\nexport const TimeIcon = styled(IoMdTime)`\n  width: 30px;\n  height: 30px;\n`;\nexport const WindIcon = styled(GiWindsock)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const SunIcon = styled(BsFillSunFill)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const HumidityIcon = styled(WiHumidity)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const RaindropsIcon = styled(WiRaindrops)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const WindSlapIcon = styled(GiWindSlap)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TempCelsiusIcon = styled(TbTemperatureCelsius)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const BarometerIcon = styled(WiBarometer)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchWeather } from 'services/WeatherAPI';\nimport Box from 'components/Box';\nimport SearchBox from 'components/SearchBox';\nimport {\n  TimeIcon,\n  TextItem,\n  WindIcon,\n  TempCelsiusIcon,\n  BarometerIcon,\n  // WindSlapIcon,\n  RaindropsIcon,\n  HumidityIcon,\n  SunIcon,\n  Container,\n  ContentContainer,\n  DetailsContainer,\n  DetailsTitle,\n  Title,\n} from './RealTimeWeather.styled';\n\nconst RealTimeWeather = () => {\n  const [location, setLocation] = useState([]);\n  const [currentCity, setCurrentCity] = useState([]);\n  const { name, localtime } = location;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cityName = searchParams.get('query') ?? '';\n\n  const {\n    condition,\n    wind_kph,\n    temp_c,\n    pressure_mb,\n    // gust_kph,\n    precip_mm,\n    uv,\n    humidity,\n    feelslike_c,\n  } = currentCity;\n\n  useEffect(() => {\n    const getFetchWeather = async () => {\n      try {\n        const data = await fetchWeather(cityName);\n        setLocation(data.location);\n        setCurrentCity(data.current);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!cityName) {\n      return;\n    }\n    getFetchWeather();\n  }, [cityName]);\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setCurrentCity([]);\n    setLocation([]);\n  };\n\n  return (\n    <Box as=\"div\">\n      <SearchBox onSubmit={handleInputSubmit} />\n      {name && (\n        <Box display=\"flex\" justifyContent=\"center\" paddingBottom=\"30px\">\n          <Container>\n            <ContentContainer>\n              <Title>{name}</Title>\n              <Box display=\"flex\">\n                <img src={condition.icon} alt=\"\" />\n                <TextItem>\n                  {temp_c} <TempCelsiusIcon />\n                </TextItem>\n              </Box>\n              <TextItem>{condition.text}</TextItem>\n              <TextItem>\n                <TimeIcon /> {localtime}\n              </TextItem>\n            </ContentContainer>\n            <DetailsTitle>Details</DetailsTitle>\n            <DetailsContainer>\n              <TextItem>\n                <WindIcon /> {wind_kph}k/h\n              </TextItem>\n              <TextItem>\n                <BarometerIcon />\n                {pressure_mb}hPa\n              </TextItem>\n              <TextItem>\n                <RaindropsIcon />\n                {precip_mm}mm\n              </TextItem>\n              <TextItem>\n                <HumidityIcon />\n                {humidity}%\n              </TextItem>\n              <TextItem>\n                RealFeel: {feelslike_c} <TempCelsiusIcon />\n              </TextItem>\n              <TextItem>\n                <SunIcon />\n                {uv} of 10\n              </TextItem>\n            </DetailsContainer>\n          </Container>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default RealTimeWeather;\n","import styled from 'styled-components';\nimport { IoMdTime } from 'react-icons/io';\nimport { GiWindsock, GiWindSlap } from 'react-icons/gi';\nimport { WiBarometer, WiRaindrops, WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { BsFillSunFill } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 448px;\n  height: 460px;\n  background: linear-gradient(\n    143.98deg,\n    rgba(255, 255, 255, 0.11) 0%,\n    rgba(255, 255, 255, 0.22) 100%\n  );\n  backdrop-filter: blur(25px);\n  border-radius: 30px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 40px;\n  line-height: 50px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  left: 40px;\n  position: absolute;\n  top: 60%;\n  width: 100%;\n\n  &::before {\n    content: '';\n    border-top: 1px solid #fff;\n    width: 82%;\n    position: absolute;\n    top: -10px;\n  }\n`;\n\nexport const TimeIcon = styled(IoMdTime)`\n  width: 30px;\n  height: 30px;\n`;\nexport const WindIcon = styled(GiWindsock)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const SunIcon = styled(BsFillSunFill)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const HumidityIcon = styled(WiHumidity)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const RaindropsIcon = styled(WiRaindrops)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const WindSlapIcon = styled(GiWindSlap)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TempCelsiusIcon = styled(TbTemperatureCelsius)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const BarometerIcon = styled(WiBarometer)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n`;\n","// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchWeather } from 'services/WeatherAPI';\nimport Box from 'components/Box';\nimport SearchBox from 'components/SearchBox';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\n\nimport {\n  TimeIcon,\n  TextItem,\n  //   WindIcon,\n  //   TempCelsiusIcon,\n  //   BarometerIcon,\n  //   WindSlapIcon,\n  //   RaindropsIcon,\n  //   HumidityIcon,\n  //   SunIcon,\n  Container,\n  ContentContainer,\n  //   DetailsContainer,\n  //   DetailsTitle,\n  Title,\n} from './ThreeDaysWeather.styled';\n\nconst ThreeDaysWeather = () => {\n  const [location, setLocation] = useState([]);\n  const [currentCity, setCurrentCity] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cityName = searchParams.get('query') ?? '';\n  const { name } = location;\n\n  useEffect(() => {\n    const getFetchWeather = async () => {\n      try {\n        const data = await fetchWeather(cityName);\n        setLocation(data.location);\n        setCurrentCity(data.forecast.forecastday);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!cityName) {\n      return;\n    }\n    getFetchWeather();\n  }, [cityName]);\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setCurrentCity([]);\n    setLocation([]);\n  };\n  //   const [currentIndex, setCurrentIndex] = useState();\n  //   function handleChange(index) {\n  //     setCurrentIndex(index);\n  //   }\n  const renderSlides = currentCity.map(({ day, date }, index) => (\n    <Box display=\"flex\" justifyContent=\"center\" marginBottom=\"40px\">\n      <Container key={index}>\n        <ContentContainer>\n          <Title>{name}</Title>\n          <Box display=\"flex\">\n            <img src={day.condition.icon} alt=\"\" />\n            <p>{day.mintemp_c}</p>\n          </Box>\n          <TextItem>{day.condition.text}</TextItem>\n          <TextItem>\n            <TimeIcon /> {date}\n          </TextItem>\n        </ContentContainer>\n      </Container>\n    </Box>\n  ));\n  return (\n    <Box as=\"div\">\n      <SearchBox onSubmit={handleInputSubmit} />\n      {name && (\n        <Carousel\n          showThumbs={false}\n          emulateTouch={true}\n          swipeable={true}\n          showStatus={false}\n          showArrows={false}\n        >\n          {renderSlides}\n        </Carousel>\n      )}\n    </Box>\n  );\n};\n\nexport default ThreeDaysWeather;\n","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Tab, Tabs } from '@mui/material';\nimport Box from 'components/Box';\nimport RealTimeWeather from 'components/RealTimeWeather';\nimport ThreeDaysWeather from 'components/ThreeDaysWeather';\n\nconst WeatherDetails = () => {\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <>{children}</>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Box as=\"main\">\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: 'divider',\n        }}\n        style={{\n          color: 'white',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingTop: '10px',\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Real time\"\n            {...a11yProps(0)}\n          />\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Three days\"\n            {...a11yProps(1)}\n          />\n          <Tab\n            style={{\n              color: 'white',\n            }}\n            label=\"Rope access\"\n            {...a11yProps(2)}\n          />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <RealTimeWeather />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ThreeDaysWeather />\n      </TabPanel>\n      <TabPanel value={value} index={2}></TabPanel>\n    </Box>\n  );\n};\n\nexport default WeatherDetails;\n"],"names":["fetchWeather","cityName","options","method","url","params","q","days","headers","axios","response","data","Wrapper","styled","Input","Button","onSubmit","useState","setCityName","onReset","event","target","reset","trim","Notify","preventDefault","type","placeholder","value","onChange","Container","ContentContainer","DetailsContainer","Title","DetailsTitle","TimeIcon","IoMdTime","WindIcon","GiWindsock","SunIcon","BsFillSunFill","HumidityIcon","WiHumidity","RaindropsIcon","WiRaindrops","TempCelsiusIcon","GiWindSlap","TbTemperatureCelsius","BarometerIcon","WiBarometer","TextItem","location","setLocation","currentCity","setCurrentCity","name","localtime","useSearchParams","searchParams","setSearchParams","get","condition","wind_kph","temp_c","pressure_mb","precip_mm","uv","humidity","feelslike_c","useEffect","getFetchWeather","current","console","log","Box","as","query","display","justifyContent","paddingBottom","src","icon","alt","text","forecast","forecastday","renderSlides","map","index","day","date","marginBottom","mintemp_c","showThumbs","emulateTouch","swipeable","showStatus","showArrows","setValue","a11yProps","id","TabPanel","props","children","other","role","hidden","sx","p","borderBottom","borderColor","style","color","paddingTop","Tabs","newValue","Tab","label"],"sourceRoot":""}