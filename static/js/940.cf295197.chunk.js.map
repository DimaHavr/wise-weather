{"version":3,"file":"static/js/940.cf295197.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/ThreeDaysWeather/ThreeDaysWeather.styled.js","components/ThreeDaysWeather/ThreeDaysWeather.jsx","services/WeatherAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Wrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  padding: 20px;\n  position: relative;\n  z-index: 1;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  align-items: center;\n  width: 300px;\n\n  letter-spacing: 1.4px;\n  color: rgba(255, 255, 255, 0.621);\n  border-color: rgba(255, 255, 255, 0.679);\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.25);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n  @media screen and (max-width: 767px) {\n    max-width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background: none;\n  color: rgba(255, 255, 255, 0.621);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  @keyframes btn-animation {\n    0% {\n      transform: scale(1.05);\n    }\n    20% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1.13);\n    }\n  }\n  :active {\n    animation: btn-animation 1s ease-out;\n  }\n`;\n\nexport const SearchIcon = styled(BsSearch)`\n  width: 30px;\n  height: 30px;\n`;\n","import { useState } from 'react';\nimport { Wrapper, Input, Button, SearchIcon } from './SearchBox.styled';\nimport { Notify } from 'notiflix';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [cityName, setCityName] = useState('');\n\n  const handleSubmit = event => {\n    if (cityName.trim() === '') {\n      Notify.failure(\n        'Sorry, there are no city name matching your search query. Please try again.'\n      );\n    }\n    event.preventDefault();\n    onSubmit(cityName);\n    onReset(event);\n  };\n\n  const onChangeInput = event => {\n    setCityName(event.target.value);\n  };\n\n  const onReset = event => {\n    setCityName('');\n    event.target.reset();\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Search city...\"\n        value={cityName}\n        onChange={onChangeInput}\n      />\n      <Button type=\"submit\">\n        <SearchIcon />\n      </Button>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import styled from 'styled-components';\nimport { IoMdTime } from 'react-icons/io';\nimport { GiWindsock, GiWindSlap } from 'react-icons/gi';\nimport { WiBarometer, WiRaindrops, WiHumidity } from 'react-icons/wi';\nimport { TbTemperatureCelsius } from 'react-icons/tb';\nimport { BsFillSunFill } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 448px;\n  height: 460px;\n  background: linear-gradient(\n    198deg,\n    rgb(255 255 255 / 8%) 0%,\n    rgb(255 255 255 / 12%) 100%\n  );\n  backdrop-filter: blur(25px);\n  border-radius: 30px;\n  @media (max-width: 450px) {\n    border-radius: 0;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 40px;\n  line-height: 50px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  left: 40px;\n  position: absolute;\n  top: 60%;\n  width: 100%;\n\n  &::before {\n    content: '';\n    border-top: 1px solid #fff;\n    width: 82%;\n    position: absolute;\n    top: -10px;\n  }\n`;\n\nexport const TimeIcon = styled(IoMdTime)`\n  width: 30px;\n  height: 30px;\n`;\nexport const WindIcon = styled(GiWindsock)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const SunIcon = styled(BsFillSunFill)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const HumidityIcon = styled(WiHumidity)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const RaindropsIcon = styled(WiRaindrops)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport const WindSlapIcon = styled(GiWindSlap)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TempCelsiusIcon = styled(TbTemperatureCelsius)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const BarometerIcon = styled(WiBarometer)`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  align-items: center;\n  gap: 5px;\n`;\n","import { Notify } from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchWeather } from 'services/WeatherAPI';\nimport Box from 'components/Box';\nimport SearchBox from 'components/SearchBox';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport Loader from 'components/Loader';\n\nimport {\n  TimeIcon,\n  TextItem,\n  WindIcon,\n  TempCelsiusIcon,\n  RaindropsIcon,\n  HumidityIcon,\n  Container,\n  ContentContainer,\n  DetailsContainer,\n  Title,\n} from './ThreeDaysWeather.styled';\n\nconst ThreeDaysWeather = () => {\n  const [location, setLocation] = useState([]);\n  const [currentCity, setCurrentCity] = useState([]);\n  const [preLoader, setPreLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cityName = searchParams.get('query') ?? '';\n  const { name } = location;\n\n  useEffect(() => {\n    const getFetchWeather = async () => {\n      setPreLoader(true);\n      try {\n        const data = await fetchWeather(cityName);\n        setLocation(data.location);\n        setCurrentCity(data.forecast.forecastday);\n        setPreLoader(false);\n      } catch (error) {\n        console.log(error);\n        Notify.failure(\n          'Sorry, there are no city matching your search query. Please try again.'\n        );\n        setPreLoader(false);\n      }\n    };\n    if (!cityName) {\n      return;\n    }\n    getFetchWeather();\n  }, [cityName]);\n\n  const handleInputSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : '');\n    setCurrentCity([]);\n    setLocation([]);\n  };\n\n  const renderSlides = currentCity.map(({ day, date }, index) => {\n    const {\n      condition,\n      mintemp_c,\n      maxtemp_c,\n      maxwind_kph,\n      avghumidity,\n      totalprecip_mm,\n    } = day;\n    return (\n      <Box\n        key={index}\n        display=\"flex\"\n        justifyContent=\"center\"\n        marginBottom=\"40px\"\n      >\n        <Container>\n          <ContentContainer>\n            <Title>{name}</Title>\n            <TextItem>\n              <TimeIcon /> {date}\n            </TextItem>\n            <Box>\n              <img src={condition.icon} alt=\"\" />\n              <TextItem>{condition.text}</TextItem>\n            </Box>\n          </ContentContainer>\n          <Box as=\"div\" display=\"flex\" style={{ gap: '15px' }}>\n            <TextItem>\n              Min: {mintemp_c}\n              <TempCelsiusIcon />\n            </TextItem>\n            <TextItem>\n              Max: {maxtemp_c}\n              <TempCelsiusIcon />\n            </TextItem>\n          </Box>\n          <DetailsContainer>\n            <TextItem>\n              <WindIcon /> max: {maxwind_kph}k/h\n            </TextItem>\n            <TextItem>\n              <RaindropsIcon />\n              {totalprecip_mm}mm\n            </TextItem>\n            <TextItem>\n              <HumidityIcon />\n              {avghumidity}%\n            </TextItem>\n          </DetailsContainer>\n        </Container>\n      </Box>\n    );\n  });\n  return (\n    <Box as=\"div\">\n      <SearchBox onSubmit={handleInputSubmit} />\n      {preLoader && <Loader />}\n      {name && (\n        <Carousel\n          showThumbs={false}\n          emulateTouch={true}\n          swipeable={true}\n          showStatus={false}\n          showArrows={true}\n        >\n          {renderSlides}\n        </Carousel>\n      )}\n    </Box>\n  );\n};\n\nexport default ThreeDaysWeather;\n","import axios from 'axios';\n\n// async function fetchMovies() {\n//   const url = `https://api.themoviedb.org/3/trending/all/day?api_key=b1c3a2089fd706f08956c6d7f55cc574`;\n\n//   const response = await axios.get(url);\n//   return response.data;\n// }\n\nconst fetchWeather = async cityName => {\n  const options = {\n    method: 'GET',\n    url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n    params: { q: `${cityName}`, days: '3' },\n    headers: {\n      'X-RapidAPI-Key': 'a05c4ca72amshd6999f2c5f785e3p10aaa3jsnfe5969edd877',\n      'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com',\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nconst fetchOneDayWeather = async cityName => {\n  const options = {\n    method: 'GET',\n    url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n    params: { q: `${cityName}`, days: '1' },\n    headers: {\n      'X-RapidAPI-Key': 'a05c4ca72amshd6999f2c5f785e3p10aaa3jsnfe5969edd877',\n      'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com',\n    },\n  };\n\n  const response = await axios(options);\n  return response.data;\n};\n\nexport { fetchWeather, fetchOneDayWeather };\n"],"names":["Wrapper","styled","Input","Button","SearchIcon","BsSearch","onSubmit","useState","cityName","setCityName","onReset","event","target","reset","trim","Notify","preventDefault","type","placeholder","value","onChange","Container","ContentContainer","DetailsContainer","Title","TimeIcon","IoMdTime","WindIcon","GiWindsock","HumidityIcon","BsFillSunFill","WiHumidity","RaindropsIcon","WiRaindrops","TempCelsiusIcon","GiWindSlap","TbTemperatureCelsius","TextItem","WiBarometer","location","setLocation","currentCity","setCurrentCity","preLoader","setPreLoader","useSearchParams","searchParams","setSearchParams","get","name","useEffect","getFetchWeather","fetchWeather","data","forecast","forecastday","console","log","renderSlides","map","index","day","date","condition","mintemp_c","maxtemp_c","maxwind_kph","avghumidity","totalprecip_mm","Box","display","justifyContent","marginBottom","src","icon","alt","text","as","style","gap","SearchBox","query","Loader","showThumbs","emulateTouch","swipeable","showStatus","showArrows","options","method","url","params","q","days","headers","axios","response","fetchOneDayWeather"],"sourceRoot":""}